// <auto-generated />
using System;
using Alquiler.Persistence.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Alquiler.Persistence.Databse.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Alquiler")
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Alquiler.Domain.Pista", b =>
                {
                    b.Property<int>("PistaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Nombre")
                        .HasColumnType("int")
                        .HasMaxLength(100);

                    b.HasKey("PistaID");

                    b.ToTable("Pistas");

                    b.HasData(
                        new
                        {
                            PistaID = 1,
                            Nombre = 0
                        },
                        new
                        {
                            PistaID = 2,
                            Nombre = 1
                        },
                        new
                        {
                            PistaID = 3,
                            Nombre = 2
                        },
                        new
                        {
                            PistaID = 4,
                            Nombre = 3
                        },
                        new
                        {
                            PistaID = 5,
                            Nombre = 4
                        },
                        new
                        {
                            PistaID = 6,
                            Nombre = 5
                        },
                        new
                        {
                            PistaID = 7,
                            Nombre = 6
                        },
                        new
                        {
                            PistaID = 8,
                            Nombre = 7
                        },
                        new
                        {
                            PistaID = 9,
                            Nombre = 8
                        },
                        new
                        {
                            PistaID = 10,
                            Nombre = 9
                        });
                });

            modelBuilder.Entity("Alquiler.Domain.Reserva", b =>
                {
                    b.Property<int>("ReservaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoraFin")
                        .HasColumnType("int");

                    b.Property<int>("HoraInicio")
                        .HasColumnType("int");

                    b.Property<int>("Pista")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservaID");

                    b.ToTable("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
